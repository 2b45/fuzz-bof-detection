package exploit

import (
    "github.com/spf13/cobra"
    "overflow/internal/overflow"
    "overflow/internal/cli"
)

var (
    host   string
    port   int
    offset int
    jump   string
    shell  string
    pref   string
    suff   string
)

var Exploit = &cobra.Command{
    Use:   "exploit",
    Short: "Attempts to execute a specified payload on target",
    Run:   exploit,
}

func Init() {
    // Host flag (required).
    Exploit.Flags().StringVarP(&host, "host", "H", "",
        "the target machine's IP address")
    Exploit.MarkFlagRequired("host")

    // Port flag (required).
    Exploit.Flags().IntVarP(&port, "port", "P", 0,
        "the port the target service is running on")
    Exploit.MarkFlagRequired("port")

    // Prefix and suffix flags (optional).
    Exploit.Flags().StringVarP(&pref, "prefix", "p", "",
        "(optional) prefix to put before payload")
    Exploit.Flags().StringVarP(&suff, "suffix", "s", "",
        "(optional) suffix to put after payload")

    // Offset flag (required).
    Exploit.Flags().IntVarP(&offset, "offset", "o", 0,
        "the offset of the EIP register")
    Exploit.MarkFlagRequired("offset")

    // Jump flag (required).
    Exploit.Flags().StringVarP(&jump, "jump", "j", "",
        "the jump address for executing shellcode")
    Exploit.MarkFlagRequired("jump")

    // Shell flag (required).
    Exploit.Flags().StringVarP(&shell, "shell", "S", "",
        "the path to the payload to be executed on the target")
    Exploit.MarkFlagRequired("shell")
}

func exploit(cmd *cobra.Command, args []string) {
    // print the title card
    cli.ExploitTitle(host, port, offset, jump, shell)

    // run the exploit functionality
    overflow.Exploit(host, port, offset, jump, shell, pref, suff)
}
